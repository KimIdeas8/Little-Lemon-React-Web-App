{"ast":null,"code":"import{useReducer}from\"react\";import{Routes,Route,useNavigate}from'react-router-dom';import BookingPage from'./BookingPage.js';import ConfirmedBookingPage from\"./ConfirmedBookingPage.js\";import HomePage from'./HomePage.js';import ErrorPage from\"./ErrorPage.js\";import{fetchAPI,submitAPI}from\"./api.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function fetchData(date){return fetchAPI(date);}//handles state change for 'availableTimes' state based on the date selected by the user\nconst CHANGE_DATE='CHANGE_DATE';function updateTimes(availableTimes,action){switch(action.type){case CHANGE_DATE:const selected_date=new Date(action.payload);return fetchData(selected_date);default:return availableTimes;}}//creates initial state for the state variable 'availableTimes':\nfunction initializeTimes(){const today=new Date();// Date Object: today's date and time\nreturn fetchData(today);// return availableTimes array from API\n}function Main(){const navigate=useNavigate();//if BookingForm is submitted, navigate to the booking confirmed page:\nfunction submitForm(formData){if(submitAPI(formData)){window.scrollTo(0,0);// Scroll to the top of the page\nnavigate('/confirmedbooking');}}/*\r\n    function updateTimes(newTime){\r\n        //setAvailableTimes(prevTimes => [...prevTimes, newTime]);\r\n    }\r\n    */ //state variable for available times:\n// const [availableTimes,setAvailableTimes] = useState(initializeTimes())\n//change the state variable 'availableTimes' to a reducer:\nconst[availableTimes,dispatch]=useReducer(updateTimes,initializeTimes());return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/booking\",element:/*#__PURE__*/_jsx(BookingPage,{availableTimes:availableTimes,dispatchFn:dispatch,onSubmitForm:submitForm,onDateChange:fetchData})}),/*#__PURE__*/_jsx(Route,{path:\"/confirmedbooking\",element:/*#__PURE__*/_jsx(ConfirmedBookingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/notfound\",element:/*#__PURE__*/_jsx(ErrorPage,{})})]})});}export default Main;export{updateTimes,initializeTimes};","map":{"version":3,"names":["useReducer","Routes","Route","useNavigate","BookingPage","ConfirmedBookingPage","HomePage","ErrorPage","fetchAPI","submitAPI","jsx","_jsx","jsxs","_jsxs","fetchData","date","CHANGE_DATE","updateTimes","availableTimes","action","type","selected_date","Date","payload","initializeTimes","today","Main","navigate","submitForm","formData","window","scrollTo","dispatch","children","path","element","dispatchFn","onSubmitForm","onDateChange"],"sources":["C:/Users/kberl/Downloads/coursera-1/Little Lemon Web App/little-lemon-app/src/components/Main.js"],"sourcesContent":["import {useReducer} from \"react\";\r\nimport {Routes,Route, useNavigate} from 'react-router-dom';\r\n\r\nimport BookingPage from './BookingPage.js';\r\nimport ConfirmedBookingPage from \"./ConfirmedBookingPage.js\";\r\nimport HomePage from './HomePage.js'\r\nimport ErrorPage from \"./ErrorPage.js\";\r\n\r\nimport { fetchAPI, submitAPI } from \"./api.js\";\r\n\r\nfunction fetchData(date){\r\n    return fetchAPI(date);\r\n}\r\n\r\n//handles state change for 'availableTimes' state based on the date selected by the user\r\nconst CHANGE_DATE = 'CHANGE_DATE';\r\n\r\nfunction updateTimes(availableTimes,action){\r\n    switch(action.type){\r\n        case CHANGE_DATE:\r\n            const selected_date = new Date(action.payload);\r\n            return fetchData(selected_date);\r\n        default:\r\n            return availableTimes;\r\n    }\r\n}\r\n\r\n//creates initial state for the state variable 'availableTimes':\r\nfunction initializeTimes() {\r\n    const today = new Date(); // Date Object: today's date and time\r\n    return fetchData(today); // return availableTimes array from API\r\n}\r\n\r\nfunction Main(){\r\n\r\n    const navigate=useNavigate();\r\n\r\n    //if BookingForm is submitted, navigate to the booking confirmed page:\r\n    function submitForm(formData){\r\n        if (submitAPI(formData)){\r\n            window.scrollTo(0, 0); // Scroll to the top of the page\r\n            navigate('/confirmedbooking');\r\n        }\r\n    }\r\n\r\n    /*\r\n    function updateTimes(newTime){\r\n        //setAvailableTimes(prevTimes => [...prevTimes, newTime]);\r\n    }\r\n    */\r\n    //state variable for available times:\r\n    // const [availableTimes,setAvailableTimes] = useState(initializeTimes())\r\n    //change the state variable 'availableTimes' to a reducer:\r\n    const [availableTimes,dispatch] = useReducer(updateTimes,initializeTimes())\r\n\r\n    return(\r\n        <main>\r\n            <Routes>\r\n                <Route path='/' element={<HomePage/>} ></Route>\r\n                <Route path='/booking' element={<BookingPage availableTimes={availableTimes} dispatchFn={dispatch} onSubmitForm={submitForm} onDateChange={fetchData}/>}></Route>\r\n                <Route path='/confirmedbooking' element={<ConfirmedBookingPage/>}></Route>\r\n                <Route path='/notfound' element={<ErrorPage/>}></Route>\r\n            </Routes>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\nexport{updateTimes,initializeTimes};\r\n"],"mappings":"AAAA,OAAQA,UAAU,KAAO,OAAO,CAChC,OAAQC,MAAM,CAACC,KAAK,CAAEC,WAAW,KAAO,kBAAkB,CAE1D,MAAO,CAAAC,WAAW,KAAM,kBAAkB,CAC1C,MAAO,CAAAC,oBAAoB,KAAM,2BAA2B,CAC5D,MAAO,CAAAC,QAAQ,KAAM,eAAe,CACpC,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CAEtC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,SAASA,CAACC,IAAI,CAAC,CACpB,MAAO,CAAAP,QAAQ,CAACO,IAAI,CAAC,CACzB,CAEA;AACA,KAAM,CAAAC,WAAW,CAAG,aAAa,CAEjC,QAAS,CAAAC,WAAWA,CAACC,cAAc,CAACC,MAAM,CAAC,CACvC,OAAOA,MAAM,CAACC,IAAI,EACd,IAAK,CAAAJ,WAAW,CACZ,KAAM,CAAAK,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACH,MAAM,CAACI,OAAO,CAAC,CAC9C,MAAO,CAAAT,SAAS,CAACO,aAAa,CAAC,CACnC,QACI,MAAO,CAAAH,cAAc,CAC7B,CACJ,CAEA;AACA,QAAS,CAAAM,eAAeA,CAAA,CAAG,CACvB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAH,IAAI,CAAC,CAAC,CAAE;AAC1B,MAAO,CAAAR,SAAS,CAACW,KAAK,CAAC,CAAE;AAC7B,CAEA,QAAS,CAAAC,IAAIA,CAAA,CAAE,CAEX,KAAM,CAAAC,QAAQ,CAACxB,WAAW,CAAC,CAAC,CAE5B;AACA,QAAS,CAAAyB,UAAUA,CAACC,QAAQ,CAAC,CACzB,GAAIpB,SAAS,CAACoB,QAAQ,CAAC,CAAC,CACpBC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE;AACvBJ,QAAQ,CAAC,mBAAmB,CAAC,CACjC,CACJ,CAEA;AACJ;AACA;AACA;AACA,MAJI,CAKA;AACA;AACA;AACA,KAAM,CAACT,cAAc,CAACc,QAAQ,CAAC,CAAGhC,UAAU,CAACiB,WAAW,CAACO,eAAe,CAAC,CAAC,CAAC,CAE3E,mBACIb,IAAA,SAAAsB,QAAA,cACIpB,KAAA,CAACZ,MAAM,EAAAgC,QAAA,eACHtB,IAAA,CAACT,KAAK,EAACgC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAExB,IAAA,CAACL,QAAQ,GAAC,CAAE,CAAS,CAAC,cAC/CK,IAAA,CAACT,KAAK,EAACgC,IAAI,CAAC,UAAU,CAACC,OAAO,cAAExB,IAAA,CAACP,WAAW,EAACc,cAAc,CAAEA,cAAe,CAACkB,UAAU,CAAEJ,QAAS,CAACK,YAAY,CAAET,UAAW,CAACU,YAAY,CAAExB,SAAU,CAAC,CAAE,CAAQ,CAAC,cACjKH,IAAA,CAACT,KAAK,EAACgC,IAAI,CAAC,mBAAmB,CAACC,OAAO,cAAExB,IAAA,CAACN,oBAAoB,GAAC,CAAE,CAAQ,CAAC,cAC1EM,IAAA,CAACT,KAAK,EAACgC,IAAI,CAAC,WAAW,CAACC,OAAO,cAAExB,IAAA,CAACJ,SAAS,GAAC,CAAE,CAAQ,CAAC,EACnD,CAAC,CACP,CAAC,CAEf,CAEA,cAAe,CAAAmB,IAAI,CACnB,OAAOT,WAAW,CAACO,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}